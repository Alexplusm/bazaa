version: "3.8"

services:
  server:
    build: .
    container_name: server_container
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${SERVER_PORT_OUTER}:${SERVER_PORT_INNER}'
    depends_on:
      - database
      - redis
    volumes:
      - media_root:/app/media_root/
    networks:
      - fullstack_net

  nginx:
    image: nginx:1.19-alpine
    container_name: nginx_container
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - '${APP_PORT_OUTER}:80'
    depends_on:
      - server
    volumes:
      - media_root:/usr/share/nginx/media:ro
      - ./nginx/:/etc/nginx/conf.d:ro
    networks:
      - fullstack_net

  web_client:
    build: web_client
    container_name: web_client_container
    restart: unless-stopped
    env_file:
      - .env
    networks:
      - fullstack_net

  database:
    image: postgres:13-alpine
    container_name: db_container
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${DB_HOST}
    volumes:
      - db_volume:/var/lib/postgresql/data
    networks:
      - fullstack_net

  redis:
    image: redis:6.0-alpine3.12
    container_name: redis_container
    restart: unless-stopped
    networks:
      - fullstack_net

  pgadmin:
    image: dpage/pgadmin4:4.29
    container_name: pgadmin_container
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '${PGADMIN_PORT}:80'
    depends_on:
      - database
    networks:
      - fullstack_net

volumes:
  media_root:
    name: 'media_root_001'
  db_volume:
    name: 'db_volume_001'

networks:
  fullstack_net:
    driver: bridge
